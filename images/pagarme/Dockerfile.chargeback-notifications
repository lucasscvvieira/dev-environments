FROM python:3.9.5-slim

## IMAGE REQUIREMENTS
## Required to work propertly with devenv

ARG TIMEZONE="America/Sao_Paulo"
ARG USERNAME
ARG UID
ARG GROUPNAME
ARG GID
ARG DOCKER_GID
ARG PROJECT_NAME

# add docker group
RUN if [ ! -z "$DOCKER_GID" ];then groupadd --gid $DOCKER_GID docker; fi

# softwares requirements
RUN apt update && \
    apt upgrade -y && \
    apt install -y \
        procps \
        keychain \
        curl \
        wget \
        git \
        openssh-client \
        tmux \
        sudo \
        bash \
        bash-completion \
        build-essential \
        fuse \
        ncurses-term \
        xclip \
        docker.io \
        docker-compose && \
    rm -rf /var/lib/apt/lists/*

# set timezone
RUN echo "$TIMEZONE" > /etc/timezone

# add user
RUN groupadd --gid $GID $GROUPNAME &&\
    useradd --create-home --shell /bin/bash --uid $UID --gid $GID --groups docker $USERNAME
RUN echo "$USERNAME ALL=(ALL) NOPASSWD:ALL" > /etc/sudoers.d/${USERNAME}_user
USER $USERNAME
RUN mkdir -p /home/$USERNAME/.local/bin /home/$USERNAME/.local/lib /home/$USERNAME/.local/share /home/$USERNAME/$PROJECT_NAME
WORKDIR /home/$USERNAME/$PROJECT_NAME
ENV PATH=/home/$USERNAME/.local/bin:$PATH
RUN echo '\n\
eval "keychain --eval --agents ssh $(ls ~/.ssh/id* | grep -oP "([^\s]*id[^\s]*[^\.pub])" | uniq | cut -d"/" -f5)"\n\
' >> /home/$USERNAME/.bashrc

ENV TERM=xterm-256color
CMD ["tail", "-f", "/dev/null"]

## PROJECT REQUIREMENTS

# add all project requirements and container commands bellow
# softwares requirements
RUN sudo apt update && \
    sudo apt install -y \
        libpq-dev && \
    sudo rm -rf /var/lib/apt/lists/*

RUN pip install --no-cache-dir --upgrade pip
RUN pip install --no-cache-dir --upgrade setuptools wheel
RUN pip install --no-cache-dir --upgrade poetry
RUN poetry config virtualenvs.create false
